@page "/OrdenesDeliGestionar/Delete/{ordenId:int}"
@rendermode InteractiveServer
@inject OrdenesDeliveryServices ordenesServices
@inject NavigationManager navigation
@inject SweetAlertService Swal

<PageTitle>Eliminar Orden</PageTitle>

<div class="container mt-5 pt-5">
    <div class="card shadow-lg">
        <!-- Header -->
        <div class="card-header" style="background-color: #FF9F1C; color: white;">
            <h2 style="font-family: 'Poppins', sans-serif;"><strong>Eliminar Orden por delivery</strong></h2>
        </div>

        <!-- Body -->
        <div class="card-body">
            <div class="mb-3">
                <strong>ID de la Orden:</strong> @orden?.OrdenId
            </div>
            <div class="mb-3">
                <strong>Cliente:</strong> @orden?.NombreCliente
            </div>
            <div class="mb-3">
                <strong>Delivery:</strong> @orden?.Delivery
            </div>
            <div class="mb-3">
                <strong>Direcci&oacute;n:</strong> @orden?.Direccion
            </div>
            <div class="mb-3">
                <strong>Metodo de pago:</strong> @orden?.MetodoPago
            </div>
        </div>

        <!-- Footer -->
        <div class="card-footer text-left">
            <button class="btn" style="background-color: #2EC4B6; color: white;" @onclick="Volver">
                <i class="fa-solid fa-backward"></i> Volver
            </button>
            <button class="btn btn-danger" @onclick="ConfirmarEliminar">
                <i class="fa-solid fa-trash"></i> Confirmar Eliminación
            </button>
        </div>
    </div>
</div>

@code {
    [Parameter] public int ordenId { get; set; }
    private OrdenesDelivery? orden;

    protected override async Task OnInitializedAsync()
    {
        orden = await ordenesServices.Buscar(ordenId);
    }

    private void Volver() => navigation.NavigateTo("/Index/OrdenesDeliveryGestionar");

    private async Task ConfirmarEliminar()
    {
        var result = await Swal.FireAsync(new SweetAlertOptions
        {
            Title = "¿Estás seguro?",
            Text = "¡No podrás revertir esto!",
            Icon = SweetAlertIcon.Warning,
            ShowCancelButton = true,
            ConfirmButtonColor = "#3085d6",
            CancelButtonColor = "#d33",
            ConfirmButtonText = "Sí, eliminarlo"
        });

        if (result.IsConfirmed)
        {
            if (orden != null)
            {
                await ordenesServices.Eliminar(ordenId);
                await Swal.FireAsync(new SweetAlertOptions
                {
                    Title = "¡Eliminado!",
                    Text = "La orden ha sido eliminada.",
                    Icon = SweetAlertIcon.Success
                });
                navigation.NavigateTo("/Index/OrdenesDeliveryGestionar");
            }
        }
    }
}
<script src="_content/CurrieTechnologies.Razor.SweetAlert2/sweetalert2.min.js"></script>
