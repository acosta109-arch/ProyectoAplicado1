@page "/Delivery/Edit/{DeliveryId:int}"
@rendermode InteractiveServer
@inject DeliveryService deliveryService
@inject NavigationManager navigation

<PageTitle>Editar Delivery</PageTitle>
<EditForm Model="delivery" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="container mt-5 pt-5">
        <div class="card shadow-lg">
            <!-- Header -->
            <div class="card-header" style="background-color: #FF9F1C; color: white;">
                <h2 style="font-family: 'Poppins', sans-serif;"><strong>Editar Delivery</strong></h2>
            </div>

            <!-- Body -->
            <div class="card-body">
                <div class="mb-3">
                    <label class="form-label" for="nombre" style="font-family: 'Poppins', sans-serif;"><strong>Nombre Completo</strong></label>
                    <div class="input-group">
                        <span class="input-group-text" style="background-color: #FF9F1C; color: white;">
                            <i class="fa-solid fa-user"></i>
                        </span>
                        <InputText id="nombre" class="form-control" @bind-Value="delivery.NombreCompleto" style="border: 1px solid gray;"></InputText>
                    </div>
                    <ValidationMessage For="@(() => delivery.NombreCompleto)" />
                </div>

                <div class="mb-3">
                    <label class="form-label" for="telefono" style="font-family: 'Poppins', sans-serif;"><strong>Teléfono</strong></label>
                    <div class="input-group">
                        <span class="input-group-text" style="background-color: #FF9F1C; color: white;">
                            <i class="fa-solid fa-phone"></i>
                        </span>
                        <InputText id="telefono" class="form-control" @bind-Value="delivery.Telefono" style="border: 1px solid gray;"></InputText>
                    </div>
                    <ValidationMessage For="@(() => delivery.Telefono)" />
                </div>

                <div class="mb-3">
                    <label class="form-label" for="turno" style="font-family: 'Poppins', sans-serif;"><strong>Turno</strong></label>
                    <div class="input-group">
                        <span class="input-group-text" style="background-color: #FF9F1C; color: white;">
                            <i class="fa-solid fa-clock"></i>
                        </span>
                        <InputText id="turno" class="form-control" @bind-Value="delivery.Turno" style="border: 1px solid gray;"></InputText>
                    </div>
                    <ValidationMessage For="@(() => delivery.Turno)" />
                </div>

                <div class="mb-3">
                    <label class="form-label" for="ruta" style="font-family: 'Poppins', sans-serif;"><strong>Ruta</strong></label>
                    <div class="input-group">
                        <span class="input-group-text" style="background-color: #FF9F1C; color: white;">
                            <i class="fa-solid fa-map-marker-alt"></i>
                        </span>
                        <InputText id="ruta" class="form-control" @bind-Value="delivery.Ruta" style="border: 1px solid gray;"></InputText>
                    </div>
                    <ValidationMessage For="@(() => delivery.Ruta)" />
                </div>
            </div>

            <!-- Footer -->
            <div class="card-footer">
                <button type="button" class="btn" style="background-color: #2EC4B6; color: white;" @onclick="Volver">
                    <i class="fa-solid fa-backward"></i> Volver
                </button>
                <button type="submit" class="btn" style="background-color: #FF9F1C; color: white;">
                    <i class="fa-solid fa-share-from-square"></i> Guardar
                </button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int DeliveryId { get; set; }

    public Delivery delivery { get; set; } = new Delivery();

    protected override async Task OnInitializedAsync()
    {
        delivery = await deliveryService.Buscar(DeliveryId) ?? new Delivery();
    }

    public async Task Guardar()
    {
        await deliveryService.Guardar(delivery);
        Volver();
    }

    public void Volver()
    {
        navigation.NavigateTo("/Index/Delivery");
    }
}