@page "/Index/Meseros"
@rendermode InteractiveServer
@inject MeserosServices meserosServices
@inject NavigationManager navigation

<PageTitle>Inicio meseros</PageTitle>
<style>
    .titulo {
        font-size: 2.5rem;
        color: #2EC4B6;
        font-weight: bold;
        text-transform: uppercase;
    }

    .filter-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 15px;
    }

    .search-box, .specialty-selector {
        padding: 10px;
        border-radius: 50px;
        border: 2px solid #2EC4B6;
        font-size: 1.1rem;
    }

    .product-card {
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        border-radius: 12px;
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: center;
        padding-bottom: 15px;
    }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);
        }

    .product-img {
        border-radius: 12px 12px 0 0;
        height: 150px;
        object-fit: cover;
        width: 100%;
    }

    .card-title {
        font-size: 1.3rem;
        font-weight: 600;
        color: #264653;
    }

    .state {
        color: #e76f51;
        font-size: 1rem;
        font-weight: bold;
    }

    .icon-label {
        font-size: 0.7rem;
        color: black;
        margin-top: 3px;
    }

    .btn-custom {
        background-color: #2EC4B6;
        color: #fff;
        border: none;
        padding: 10px 20px;
        border-radius: 50px;
        font-size: 0.9rem;
        font-weight: bold;
        transition: background-color 0.3s ease;
    }

        .btn-custom:hover {
            background-color: #29b0a8;
        }

    .back-button {
        position: absolute;
        top: 20px;
        left: 20px;
    }

    .btn-success {
        background-color: #FF9F1C;
        border: none;
        padding: 10px 20px;
        border-radius: 50px;
        font-size: 0.9rem;
        font-weight: bold;
        transition: background-color 0.3s ease;
    }

        .btn-success:hover {
            background-color: #e08b19;
        }
</style>

<div class="container mt-5 pt-5">
    <a href="/Index/Admin" class="btn btn-success back-button mt-5">
        <i class="fa-solid fa-backward"></i>
    </a>
    <h1 class="text-center mb-5 titulo"><i class="fa-solid fa-user-tie"></i> Área de meseros <i class="fa-solid fa-user-tie"></i></h1>
    <div class="text-left mb-4">
        <a href="/Create/Meseros" class="btn btn-custom"><i class="fa-solid fa-square-plus"></i> Añadir mesero</a>
    </div>
    <div class="filter-container mb-4">
        <input type="text" class="form-control search-box" placeholder="Buscar..."
               @bind="busquedaNombre" @oninput="AplicarFiltro" />
        <select class="form-select specialty-selector" @bind="especialidadSeleccionada">
            <option value="">Todas</option>
            <option value="Nombre">Nombre</option>
            <option value="Telefono">Teléfono</option>
        </select>
    </div>

    <div class="row" id="mesero-list" style="font-family: 'Poppins', sans-serif;">
        @foreach (var mesero in meserosFiltrados)
        {
            <div class="col-md-3 mb-4 text-center">
                <div class="card product-card h-100">
                    <img src="@mesero.FotoURL" class="card-img-top product-img" alt="@mesero.NombreCompleto">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@mesero.NombreCompleto</h5>
                        <p class="state"><strong>Estado:</strong> @mesero.Estado</p>
                    </div>

                    <div class="card-footer text-center">
                        <div class="d-flex justify-content-center">
                            <div class="text-center mx-4">
                                <a href="/Meseros/Details/@mesero.MeseroId" class="btn btn-warning text-white rounded-circle" title="Ver detalles">
                                    <i class="fa-solid fa-circle-info"></i>
                                </a>
                                <span class="icon-label">Info</span>
                            </div>
                            <div class="text-center mx-4">
                                <a href="/Meseros/Edit/@mesero.MeseroId" class="btn btn-primary rounded-circle text-white" title="Modificar">
                                    <i class="fa-solid fa-sliders"></i>
                                </a>
                                <span class="icon-label">Editar</span>
                            </div>
                            <div class="text-center mx-4">
                                <a href="/Meseros/Delete/@mesero.MeseroId" class="btn btn-danger rounded-circle text-white" title="Eliminar">
                                    <i class="fa-solid fa-trash-can"></i>
                                </a>
                                <span class="icon-label">Eliminar</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    public List<Meseros> meseros = new List<Meseros>();
    private string meseroSeleccionado = "";
    private string busquedaNombre = "";
    private string busquedaTelefono = "";
    private List<Meseros> meserosFiltrados = new List<Meseros>();

    protected override async Task OnInitializedAsync()
    {
        meseros = await meserosServices.Listar(m => true);
        meserosFiltrados = meseros.ToList();
        AplicarFiltro();
    }

    private string especialidadSeleccionada
    {
        get => _especialidadSeleccionada;
        set
        {
            if (_especialidadSeleccionada != value)
            {
                _especialidadSeleccionada = value;
                AplicarFiltro(); // Llama al método de filtrado al cambiar la especialidad.
            }
        }
    }
    private string _especialidadSeleccionada; // Campo privado para el valor real.

    private void AplicarFiltro()
    {
        var filtroTexto = busquedaNombre.ToLower().Trim();
        var resultadoFiltrado = meseros.AsQueryable();

        // Verifica la especialidad seleccionada y aplica el filtro correspondiente
        if (especialidadSeleccionada == "Nombre" && !string.IsNullOrWhiteSpace(filtroTexto))
        {
            resultadoFiltrado = resultadoFiltrado
                .Where(c => c.NombreCompleto.ToLower().Contains(filtroTexto));
        }
        else if (especialidadSeleccionada == "Telefono" && !string.IsNullOrWhiteSpace(filtroTexto))
        {
            resultadoFiltrado = resultadoFiltrado
                .Where(c => c.Telefono.ToLower().Contains(filtroTexto));
        }

        // Si no hay filtro aplicado, se muestran todos los meseros
        meserosFiltrados = resultadoFiltrado.ToList();

        // Actualiza la UI
        StateHasChanged();
    }
}