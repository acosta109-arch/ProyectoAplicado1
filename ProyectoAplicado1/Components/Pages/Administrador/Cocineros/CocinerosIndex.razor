@page "/Index/Cocineros"
@rendermode InteractiveServer
@inject CocineroServices cocinerosServices
@inject NavigationManager navigation

<PageTitle>Inicio cocineros</PageTitle>
<style>
    .titulo {
        font-size: 2.5rem;
        color: #2EC4B6;
        font-weight: bold;
        text-transform: uppercase;
    }

    .filter-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 15px;
    }

    .search-box, .specialty-selector {
        padding: 10px;
        border-radius: 50px;
        border: 2px solid #2EC4B6;
        font-size: 1.1rem;
    }

    .product-card {
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        border-radius: 12px;
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: center;
        padding-bottom: 15px;
    }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);
        }

    .product-img {
        border-radius: 12px 12px 0 0;
        height: 150px;
        object-fit: cover;
        width: 100%;
    }

    .card-title {
        font-size: 1.3rem;
        font-weight: 600;
        color: #264653;
    }

    .price, .phone, .state {
        color: #e76f51;
        font-size: 1rem;
        font-weight: bold;
    }

    .icon-label {
        font-size: 0.7rem;
        color: black;
        margin-top: 3px;
    }

    .btn-custom {
        background-color: #2EC4B6;
        color: #fff;
        border: none;
        padding: 10px 20px;
        border-radius: 50px;
        font-size: 0.9rem;
        font-weight: bold;
        transition: background-color 0.3s ease;
    }

        .btn-custom:hover {
            background-color: #29b0a8;
        }

    .back-button {
        position: absolute;
        top: 20px;
        left: 20px;
        z-index: 10; /* Ensure the button is above other elements */
    }

    .btn-success {
        background-color: #FF9F1C; /* New color */
        border: none;
        padding: 10px 20px;
        border-radius: 50px;
        font-size: 0.9rem;
        font-weight: bold;
        transition: background-color 0.3s ease;
    }

        .btn-success:hover {
            background-color: #e08b19; /* Slightly darker shade for hover effect */
        }
</style>

<div class="container mt-5 pt-5">
    <a href="/Index/Admin" class="btn btn-success back-button mt-5">
        <i class="fa-solid fa-backward"></i>
    </a>
    <h1 class="text-center mb-5 titulo"><i class="fa-solid fa-user-chef"></i> Área de cocineros <i class="fa-solid fa-user-chef"></i></h1>
    <div class="text-left mb-4">
        <a href="/Create/Cocineros" class="btn btn-custom"><i class="fa-solid fa-square-plus"></i> Añadir cocinero</a>
    </div>
    <div class="filter-container mb-4">
        <input type="text" class="form-control search-box" placeholder="Buscar por nombre..." @oninput="AplicarFiltro" @bind="busquedaNombre" />
        <select class="form-select specialty-selector" @onchange="FiltrarPorEspecialidad">
            <option value="">Todas</option>
            <option value="Pasteleria">Pasteleria</option>
            <option value="Gastronomia">Gastronomia</option>
            <option value="Vegetariana">Vegetariana</option>
        </select>
    </div>

    <div class="row" id="cocinero-list" style="font-family: 'Poppins', sans-serif;">
        @foreach (var cocinero in cocinerosFiltrados)

        {
            <div class="col-md-3 mb-4 text-center">
                <div class="card product-card h-100">
                    <img src="@cocinero.FotoURL" class="card-img-top product-img" alt="@cocinero.NombreCompleto">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@cocinero.NombreCompleto</h5>
                        <p class="card-text"><strong>Especialidad:</strong> @cocinero.Especialidad</p>
                        <p class="state"><strong>Estado:</strong> @cocinero.Estado</p>
                    </div>

                    <div class="card-footer text-center">
                        <div class="d-flex justify-content-center">
                            <div class="text-center mx-4">
                                <a href="/Cocineros/Details/@cocinero.CocineroId" class="btn btn-warning text-white rounded-circle" title="Ver detalles">
                                    <i class="fa-solid fa-circle-info"></i>
                                </a>
                                <span class="icon-label">Info</span>
                            </div>
                            <div class="text-center mx-4">
                                <a href="/Cocineros/Edit/@cocinero.CocineroId" class="btn btn-primary rounded-circle text-white" title="Modificar">
                                    <i class="fa-solid fa-sliders"></i>
                                </a>
                                <span class="icon-label">Editar</span>
                            </div>
                            <div class="text-center mx-4">
                                <a href="/Cocineros/Delete/@cocinero.CocineroId" class="btn btn-danger rounded-circle text-white" title="Eliminar">
                                    <i class="fa-solid fa-trash-can"></i>
                                </a>
                                <span class="icon-label">Eliminar</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    public List<Cocineros> cocineros = new List<Cocineros>();

    private string especialidadSeleccionada = "";

    private string busquedaNombre = "";

    private List<Cocineros> cocinerosFiltrados = new();



    protected override async Task OnInitializedAsync()

    {

        cocineros = await cocinerosServices.Listar(c => true);

        AplicarFiltro();

    }



    private void FiltrarPorEspecialidad(ChangeEventArgs e)

    {

        especialidadSeleccionada = e.Value?.ToString() ?? "";

        AplicarFiltro();

    }



    private void AplicarFiltro()

    {

        cocinerosFiltrados = cocineros

            .Where(c => (string.IsNullOrEmpty(especialidadSeleccionada) || c.Especialidad.Contains(especialidadSeleccionada, StringComparison.OrdinalIgnoreCase))

                     && (string.IsNullOrEmpty(busquedaNombre) || c.NombreCompleto.Contains(busquedaNombre, StringComparison.OrdinalIgnoreCase)))

            .ToList();

    }
}