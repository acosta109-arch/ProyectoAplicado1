@page "/Meseros/Edit/{meseroId:int}"
@rendermode InteractiveServer
@inject MeserosServices meseroServices
@inject NavigationManager navigation
@inject SweetAlertService Swal

<PageTitle>Editar Mesero</PageTitle>
<EditForm Model="mesero" OnValidSubmit="ConfirmarActualizar">
    <DataAnnotationsValidator />
    <div class="container mt-5 pt-5">
        <div class="card shadow-lg">
            @* Header *@
            <div class="card-header" style="background-color: #FF9F1C; color: white;">
                <h2 style="font-family: 'Poppins', sans-serif;"><strong>Editar Mesero</strong></h2>
            </div>

            @* Body *@
            <div class="card-body">
                <div class="mb-3">
                    <label class="form-label" for="nombreCompleto" style="font-family: 'Poppins', sans-serif;"><strong>Nombre Completo</strong></label>
                    <div class="input-group">
                        <span class="input-group-text" style="background-color: #FF9F1C; color: white;">
                            <i class="fa-solid fa-file-signature"></i>
                        </span>
                        <InputText id="nombreCompleto" class="form-control" @bind-Value="mesero.NombreCompleto" style="border: 1px solid gray;"></InputText>
                    </div>
                    <ValidationMessage For="@(() => mesero.NombreCompleto)"></ValidationMessage>
                </div>

                <div class="mb-3">
                    <label class="form-label" for="telefono" style="font-family: 'Poppins', sans-serif;"><strong>Teléfono</strong></label>
                    <div class="input-group">
                        <span class="input-group-text" style="background-color: #FF9F1C; color: white;">
                            <i class="fa-solid fa-phone"></i>
                        </span>
                        <InputText id="telefono" class="form-control" @bind-Value="mesero.Telefono" style="border: 1px solid gray;"></InputText>
                    </div>
                    <ValidationMessage For="@(() => mesero.Telefono)"></ValidationMessage>
                </div>

                <div class="mb-3">
                    <label class="form-label" for="estado" style="font-family: 'Poppins', sans-serif;"><strong>Estado</strong></label>
                    <div class="input-group">
                        <span class="input-group-text" style="background-color: #FF9F1C; color: white;">
                            <i class="fas fa-check-circle"></i>
                        </span>
                        <InputSelect id="estado" class="form-control" @bind-Value="mesero.Estado" style="border: 1px solid gray;">
                            <option value="">Seleccione el estado</option>
                            <option value="Activo">Activo</option>
                            <option value="Inactivo">Inactivo</option>
                        </InputSelect>
                    </div>
                    <ValidationMessage For="@(() => mesero.Estado)"></ValidationMessage>
                </div>

                <div class="mb-3">
                    <label class="form-label" for="fotoURL" style="font-family: 'Poppins', sans-serif;"><strong>Url de la foto</strong></label>
                    <div class="input-group">
                        <span class="input-group-text" style="background-color: #FF9F1C; color: white;">
                            <i class="fas fa-image"></i>
                        </span>
                        <InputText id="fotoURL" class="form-control" @bind-Value="mesero.FotoURL" style="border: 1px solid gray;"></InputText>
                    </div>
                    <ValidationMessage For="@(() => mesero.FotoURL)"></ValidationMessage>
                </div>
            </div>

            @* Footer *@
            <div class="card-footer">
                <button type="button" class="btn" style="background-color: #2EC4B6; color: white;" @onclick="Volver">
                    <i class="fa-solid fa-backward"></i> Volver
                </button>
                <button type="submit" class="btn" style="background-color: #FF9F1C; color: white;">
                    <i class="fa-solid fa-share-from-square"></i> Guardar
                </button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter] public int meseroId { get; set; }
    public Meseros mesero { get; set; } = new Meseros();

    protected override async Task OnInitializedAsync()
    {
        mesero = await meseroServices.Buscar(meseroId) ?? new Meseros();
    }

    public async Task ConfirmarActualizar()
    {
        var result = await Swal.FireAsync(new SweetAlertOptions
        {
            Title = "¿Deseas guardar los cambios?",
            ShowDenyButton = true,
            ShowCancelButton = true,
            ConfirmButtonText = "Guardar",
            DenyButtonText = "No guardar"
        });

        if (result.IsConfirmed)
        {
            await Swal.FireAsync("¡Modificado!", "", SweetAlertIcon.Success);
            await Actualizar();
        }
        else if (result.IsDenied)
        {
            await Swal.FireAsync("Los cambios no se han guardado", "", SweetAlertIcon.Info);
            navigation.NavigateTo("/Index/Meseros");
        }
    }

    public async Task Actualizar()
    {
        if (await meseroServices.Modificar(mesero))
        {
            Volver();
        }
    }

    public void Volver()
    {
        navigation.NavigateTo("/Index/Meseros");
    }
}

<script src="_content/CurrieTechnologies.Razor.SweetAlert2/sweetalert2.min.js"></script>
